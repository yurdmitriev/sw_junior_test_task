<?php

namespace App\Models;

use App\App;

abstract class Product extends Model {
    protected static string $table = "Products";

    public string $sku;
    public string $name;
    public float $price;
    private Type $type;

    public function __construct(string $sku, string $name, float $price, array $params) {
        $this->sku = $sku;
        $this->name = $name;
        $this->price = $price;

        foreach ($params as $param => $value) {
            if (property_exists($this, $param)) $this->$param = $value;
        }

        $this->type = Type::search(['title' => basename(str_replace('\\', '/', get_called_class()))]);
    }

    public function getProperties(): array {
        return [
            'sku' => $this->sku,
            'name' => $this->name,
            'price' => "{$this->price} $",
            'attribute' => $this->getAttribute()
        ];
    }

    public abstract function getAttribute(): string;

    public function save() {
        return parent::save(); // TODO: Change the autogenerated stub
    }

    public static function list() {
        return parent::list(); // TODO: Change the autogenerated stub
    }

    public static function types() {
        return Type::list();
    }
}